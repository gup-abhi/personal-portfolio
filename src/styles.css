/* You can add global styles to this file, and also import other style files */

:root {
    /* --bg-color: #000000;
    --text-color: #FFFFFF;
    --border-color: #CCCCCC;
    --icon-button-color: #FFFFFF;
    --accent-color: #FF6B6B;
    --shadow-color: #333333;
    --gradient-color-1: #FF6B6B;
    --gradient-color-2: #3498db;  */

    --bg-color: #000000; /* Black */
    --text-color: #FFFFFF; /* White */
    --border-color: #333333; /* Dark Gray */
    --icon-button-color: #FFFFFF; /* White */
    --accent-color: #FFD700; /* Gold */
    --shadow-color: #555555; /* Medium Gray */
    --gradient-color-1: #FFD700; /* Gold */
    --gradient-color-2: #C0C0C0;; /* Dark Gray */
    --shadow-elevation: 0px 0.8px 0.9px var(--shadow-color), 0.1px 2.7px 3px -0.8px var(--shadow-color), 0.1px 6.8px 7.7px -1.7px var(--shadow-color), 0.3px 16.6px 18.7px -2.5px var(--shadow-color);
}

html {
    color-scheme: dark light;
    height: 100%;
}

body {
    min-height: 100%;
    width: 100%;
    background-color: var(--bg-color);
    color: var(--text-color);
    font-family: "Trirong", serif;
}

*,
*::before,
*::after {
    box-sizing: border-box;
    color: var(--text-color);
}

* {
    margin: 0;
    padding: 0;
    font: inherit;
}

img,
svg,
picture {
    display: block;
    max-width: 100%;
}

a:hover {
    color: var(--accent-color);
}

h1,h2,h3,h4,h5,h6 {
    font-family: "Young Serif";
}


/* Neon Button styling START */

.neon-button {
    position: relative;
    font-size: 1.5rem;
    display: inline-block;
    cursor: pointer;
    text-decoration: none;
    color: var(--accent-color);
    border: var(--accent-color) 0.125em solid;
    padding: 0.25em 1em;
    border-radius: 0.25em;
    text-shadow: 0 0 0.125em hsl(0 0% 100% / 0.3), 0 0 0.45em var(--accent-color);
    box-shadow: inset 0 0 0.5em 0 var(--accent-color), 0 0 0.5em 0 var(--accent-color);
}

.neon-button::before {
    pointer-events: none;
    content: "";
    position: absolute;
    background: var(--accent-color);
    top: 120%;
    left: 0;
    width: 100%;
    height: 100%;
    transform: perspective(1em) rotateX(40deg) scale(1, 0.35);
    filter: blur(1.5em);
    opacity: 0.7;
}

.neon-button::after {
    content: "";
    position: absolute;
    top: 0;
    left: 0;
    bottom: 0;
    right: 0;
    box-shadow: 0 0 2em 0.5em var(--accent-color);
    background: var(--accent-color);
    z-index: -1;
    opacity: 0;
    transition: opacity 100ms linear;
}

.neon-button:hover,
.neon-button:focus-visible {
    color: var(--bg-color);
    text-shadow: none;
    text-decoration: none;
}

.neon-button:hover::before,
.neon-button:focus-visible::before {
    opacity: 1;
}

.neon-button:hover::after,
.neon-button:focus-visible::after {
    opacity: 1;
}


/* Neon Button styling END */

/* ScrollBar customization START */
body::-webkit-scrollbar {
    width: 0.75rem;
    /* width of the entire scrollbar */
}

body::-webkit-scrollbar-track {
    background: var(--bg-color);
    /* color of the tracking area */
}

body::-webkit-scrollbar-thumb {
    background-color: var(--text-color);
    /* color of the scroll thumb */
    border-radius: 1.25rem;
    /* roundness of the scroll thumb */
    border: 3px solid transparent;
    /* creates padding around scroll thumb */
}

/* ScrollBar customization END */

/* Infinite scroll Tag List START */
.tag-list {
    margin: 0;
    padding-inline: 0;
    list-style: none;
}

.tag-list li {
    background-color: var(--accent-color);
    color: var(--bg-color);
    border-radius: 0.25rem;
    box-shadow: 0 0.5rem 1rem -0.25rem var(--shadow-color);
    font-weight: bold;
    padding-block: 0.125rem;
    padding-inline: 0.25rem;
    font-size: 0.8125rem;
}
/* Infinite scroll Tag List END */

/* Infinite Scroll START */
.scroller {
    max-width: 100%;
}

.scroller__inner {
    padding-block: 1rem;
    display: flex;
    gap: 1rem;
    flex-wrap: wrap;
}

.scroller[data-animated=true] {
    overflow: hidden;
    mask: linear-gradient(90deg, transparent, white 20%, white 80%, transparent);
}

.scroller[data-animated=true] .scroller__inner {
    width: max-content;
    flex-wrap: nowrap;
    animation: scroll var(--_animation-duration, 40s) var(--_animation-direction, forwards) linear infinite;
}

.scroller[data-direction="right"] {
    --_animation-direction: reverse;
}

.scroller[data-direction="left"] {
    --_animation-direction: forwards;
}

.scroller[data-speed="fast"] {
    --_animation-duration: 20s;
}

.scroller[data-speed="slow"] {
    --_animation-duration: 60s;
}

@keyframes scroll {
    to {
        transform: translate(calc(-50% - .5rem));
    }
}

/* Infinite Scroll END */